/*
 * Declarations for file handle and file table management.
 */

#ifndef _FILE_H_
#define _FILE_H_

/*
 * Contains some file-related maximum length constants
 */
#include <limits.h>

struct file {
  struct vnode *f_vnode;
};

struct OFtable_node{
  struct file *file_node;
  mode_t mode;
  off_t offset;
  int ref_count;
};
struct OFtable_node *OFtable;
/*
 * Put your function declarations and data types here ...
 */

int open(char *filename,int flags, mode_t mode);
int close(int fd);

ssize_t read(int fd, void *buf, size_t buflen);
ssize_t write(int fd, const void *buf, size_t nbytes);
off_t lseek(int fd, off_t pos, int whence);
int dup2(int oldfd, int newfd);

void OFtable_bootstrap();
void OFtable_clear();
#endif /* _FILE_H_ */
